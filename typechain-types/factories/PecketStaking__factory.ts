/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { PecketStaking, PecketStakingInterface } from "../PecketStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract PecketToken",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ValidatorRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "getValidators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract PecketToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052683635c9adc5dea00000600155600560025534801561002257600080fd5b50604051611349380380611349833981810160405281019061004491906100ff565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061012c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ba8261008f565b9050919050565b60006100cc826100af565b9050919050565b6100dc816100c1565b81146100e757600080fd5b50565b6000815190506100f9816100d3565b92915050565b6000602082840312156101155761011461008a565b5b6000610123848285016100ea565b91505092915050565b61120e8061013b6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637b0a47ee116100665780637b0a47ee1461016d578063a694fc3a1461018b578063b7ab4db5146101a7578063facd743b146101c5578063fc0c546a146101f55761009e565b806316934fc4146100a35780632e17de78146100d357806335aa2e44146100ef578063375b3c0a1461011f5780635873eb9b1461013d575b600080fd5b6100bd60048036038101906100b89190610bf5565b610213565b6040516100ca9190610c3b565b60405180910390f35b6100ed60048036038101906100e89190610c82565b61022b565b005b61010960048036038101906101049190610c82565b610574565b6040516101169190610cbe565b60405180910390f35b6101276105b3565b6040516101349190610c3b565b60405180910390f35b61015760048036038101906101529190610bf5565b6105b9565b6040516101649190610c3b565b60405180910390f35b6101756105d1565b6040516101829190610c3b565b60405180910390f35b6101a560048036038101906101a09190610c82565b6105d7565b005b6101af610936565b6040516101bc9190610d97565b60405180910390f35b6101df60048036038101906101da9190610bf5565b6109c4565b6040516101ec9190610dd4565b60405180910390f35b6101fd6109e4565b60405161020a9190610e4e565b60405180910390f35b60036020528060005260406000206000915090505481565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a490610ec6565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102fc9190610f15565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161035e929190610f49565b6020604051808303816000875af115801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a19190610f9e565b6103e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d790611017565b60405180910390fd5b600154600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541080156104795750600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15610523576000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506104df33610a08565b3373ffffffffffffffffffffffffffffffffffffffff167fe1434e25d6611e0db941968fdc97811c982ac1602e951637d206f5fdda9dd8f160405160405180910390a25b3373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75826040516105699190610c3b565b60405180910390a250565b6006818154811061058457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60046020528060005260406000206000915090505481565b60025481565b60015481101561061c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061390611083565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610679939291906110a3565b6020604051808303816000875af1158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc9190610f9e565b6106fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f290611126565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461074a9190611146565b9250508190555042600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108e5576001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fd09501348473474a20c772c79c653e1fd7e8b437e418fe235d277d2c8885325160405160405180910390a25b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8260405161092b9190610c3b565b60405180910390a250565b606060068054806020026020016040519081016040528092919081815260200182805480156109ba57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610970575b5050505050905090565b60056020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005b600680549050811015610b8e578173ffffffffffffffffffffffffffffffffffffffff1660068281548110610a4357610a4261117a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b815760066001600680549050610a9d9190610f15565b81548110610aae57610aad61117a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660068281548110610aed57610aec61117a565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006805480610b4757610b466111a9565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055610b8e565b8080600101915050610a0b565b5050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bc282610b97565b9050919050565b610bd281610bb7565b8114610bdd57600080fd5b50565b600081359050610bef81610bc9565b92915050565b600060208284031215610c0b57610c0a610b92565b5b6000610c1984828501610be0565b91505092915050565b6000819050919050565b610c3581610c22565b82525050565b6000602082019050610c506000830184610c2c565b92915050565b610c5f81610c22565b8114610c6a57600080fd5b50565b600081359050610c7c81610c56565b92915050565b600060208284031215610c9857610c97610b92565b5b6000610ca684828501610c6d565b91505092915050565b610cb881610bb7565b82525050565b6000602082019050610cd36000830184610caf565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d0e81610bb7565b82525050565b6000610d208383610d05565b60208301905092915050565b6000602082019050919050565b6000610d4482610cd9565b610d4e8185610ce4565b9350610d5983610cf5565b8060005b83811015610d8a578151610d718882610d14565b9750610d7c83610d2c565b925050600181019050610d5d565b5085935050505092915050565b60006020820190508181036000830152610db18184610d39565b905092915050565b60008115159050919050565b610dce81610db9565b82525050565b6000602082019050610de96000830184610dc5565b92915050565b6000819050919050565b6000610e14610e0f610e0a84610b97565b610def565b610b97565b9050919050565b6000610e2682610df9565b9050919050565b6000610e3882610e1b565b9050919050565b610e4881610e2d565b82525050565b6000602082019050610e636000830184610e3f565b92915050565b600082825260208201905092915050565b7f496e73756666696369656e74207374616b650000000000000000000000000000600082015250565b6000610eb0601283610e69565b9150610ebb82610e7a565b602082019050919050565b60006020820190508181036000830152610edf81610ea3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f2082610c22565b9150610f2b83610c22565b9250828203905081811115610f4357610f42610ee6565b5b92915050565b6000604082019050610f5e6000830185610caf565b610f6b6020830184610c2c565b9392505050565b610f7b81610db9565b8114610f8657600080fd5b50565b600081519050610f9881610f72565b92915050565b600060208284031215610fb457610fb3610b92565b5b6000610fc284828501610f89565b91505092915050565b7f556e7374616b65207472616e73666572206661696c6564000000000000000000600082015250565b6000611001601783610e69565b915061100c82610fcb565b602082019050919050565b6000602082019050818103600083015261103081610ff4565b9050919050565b7f4d696e696d756d207374616b6520726571756972656400000000000000000000600082015250565b600061106d601683610e69565b915061107882611037565b602082019050919050565b6000602082019050818103600083015261109c81611060565b9050919050565b60006060820190506110b86000830186610caf565b6110c56020830185610caf565b6110d26040830184610c2c565b949350505050565b7f5374616b65207472616e73666572206661696c65640000000000000000000000600082015250565b6000611110601583610e69565b915061111b826110da565b602082019050919050565b6000602082019050818103600083015261113f81611103565b9050919050565b600061115182610c22565b915061115c83610c22565b925082820190508082111561117457611173610ee6565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212206260b0cd9bc147945beceb018a7c8318c4fdeef18b4d2d3820150463b576d70564736f6c634300081c0033";

type PecketStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PecketStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PecketStaking__factory extends ContractFactory {
  constructor(...args: PecketStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, overrides || {}) as Promise<
      PecketStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PecketStaking__factory {
    return super.connect(runner) as PecketStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PecketStakingInterface {
    return new Interface(_abi) as PecketStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PecketStaking {
    return new Contract(address, _abi, runner) as unknown as PecketStaking;
  }
}
